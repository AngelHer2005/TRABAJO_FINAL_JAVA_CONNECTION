/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Conexión;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alberto Arroyo
 */
public class Diseño extends javax.swing.JDialog {
    public String[] tablas_bbdd = {"Cliente", "Empleado", "Cargo", "Comprobante", "Factura", "Boleta"};
    public Connection conn = null;
    public Conexión conx = new Conexión();
    
    /**
     * Creates new form ComprobanteView_Connect
     */
    public Diseño(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tacons = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbres = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btejec = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txalias = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        upd = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        create = new javax.swing.JButton();
        reinicio = new javax.swing.JButton();
        salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Conexión", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setText("REALIZA TU CONSULTA");

        tacons.setColumns(20);
        tacons.setRows(5);
        jScrollPane1.setViewportView(tacons);

        tbres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tbres);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"[PK] ID_CLI", "[PK] ID_EMP", "[PK] ID_CAR", "[PK] ID_COM", "[PK] ID_FAC", "[PK] ID_BOL"},
                {"NOMBRE", "NOMBRE", "CARGO", "MET_PAGO", "CONSUMO", "TOTAL"},
                {"APELLIDO", "DNI", "SALARIO", "[FK] ID_FAC", "IMPORTE", "SERVICIO"},
                {"EDAD", "DIRECCIÓN", "DESCRIPCIÓN", "[FK] ID_BOL", "TOTAL", "TOTAL_GENERAL"},
                {"TELÉFONO", "EDAD", null, "[FK] ID_EMP", "SERVICIO", null},
                {"DIRECCIÓN", "TELÉFONO", null, null, "TOTAL_GENERAL", null},
                {"DNI", "[FK] ID_CAR", null, null, null, null},
                {"[FK] ID_COM", null, null, null, null, null}
            },
            new String [] {
                "CLIENTE", "EMPLEADO", "CARGO", "COMPROBANTE", "FACTURA", "BOLETA"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        btejec.setBackground(new java.awt.Color(102, 255, 255));
        btejec.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btejec.setText("EJECUTAR");
        btejec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btejecActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setText("RESULTADO");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("INGRESA TODOS LOS ALIAS QUE USARÁS EN ORDEN");

        txalias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txaliasActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("SEPARADOS POR COMAS \", \"");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("OJO: No coloques alias ni funciones a las tablas.");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel6.setText("BASE DE DATOS");

        delete.setBackground(new java.awt.Color(255, 0, 0));
        delete.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        delete.setText("ELIMINAR");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        upd.setBackground(new java.awt.Color(0, 204, 255));
        upd.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        upd.setText("ACTUALIZAR");
        upd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("BOTONES DE ACCESO A LAS CONSULTAS");

        create.setBackground(new java.awt.Color(255, 255, 51));
        create.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        create.setText("CREAR");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        reinicio.setBackground(new java.awt.Color(204, 255, 204));
        reinicio.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        reinicio.setText("REINICIO");
        reinicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reinicioActionPerformed(evt);
            }
        });

        salir.setBackground(new java.awt.Color(204, 0, 0));
        salir.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        salir.setText("SALIR");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 798, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(txalias, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel3)
                        .addGap(30, 30, 30)
                        .addComponent(btejec, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(reinicio, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(upd, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(create, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(204, 204, 204)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(btejec, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reinicio, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(upd, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(create, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txalias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btejecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btejecActionPerformed
        try {
            ejecutar();
        } catch (SQLException ex) {
            Logger.getLogger(Diseño.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btejecActionPerformed

    private void txaliasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txaliasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txaliasActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try {
            // TODO add your handling code here:
            conn = conx.getConexion();
            JOptionPane.showMessageDialog(null, "Este programa eliminará una fila completa, sin importar que dato elijas.");
            String[] datos = recolectarRegistro(true).toArray(new String[0]);
            tacons.setText("Select * from " + datos[0]);

            String[] subarray = Arrays.copyOfRange(datos, 3, datos.length);
            String alias = String.join(", ", subarray);
            
            txalias.setText(alias);
            
            String query = "DELETE FROM " + datos[0] + " \n" +
                    "WHERE " + datos[1] + " = '" + datos[2] + "'"; 
            conx.updStatement(query, conn);
            ejecutar();
        } catch (SQLException ex) {
            Logger.getLogger(Diseño.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void updActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updActionPerformed
        try {
            conn = conx.getConexion();
            
            String[] datos = recolectarRegistro(true).toArray(new String[0]);
            String cambiar = JOptionPane.showInputDialog("¿Qué dato deseas colocar?");
            String id = conx.busquedaRapida("select " + datos[3] + " from " + datos[0] + " where " + datos[1] + " = '" + datos[2] + "'", conn, datos[3]);
            tacons.setText("Select * from " + datos[0]);
            for (String dato : datos) {
                System.out.println(dato);
            }
            String[] subarray = Arrays.copyOfRange(datos, 3, datos.length);
            String alias = String.join(", ", subarray);
            
            txalias.setText(alias);
            
            String query = "UPDATE " + datos[0] + " \n" +
                           "SET " + datos[1] + " = '" + cambiar + "'\n" +
                           "WHERE " + datos[3] + " = '" + id + "'"; 
            conx.updStatement(query, conn);
            ejecutar();
        } catch (SQLException ex) {
            Logger.getLogger(Diseño.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_updActionPerformed

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        try {
            // TODO add your handling code here:
            conn = conx.getConexion();
            String[] datos = recolectarRegistro(false).toArray(new String[0]);
            String[] cantidad = conx.sacarCampos(datos[0]).toArray(new String[0]);
            
            tacons.setText("Select * from " + datos[0]);
            for (String dato : datos) {
                System.out.println(dato);
            }
            String[] subarray = conx.sacarCampos(datos[0]).toArray(new String[0]);
            String alias = String.join(", ", subarray);
            
            txalias.setText(alias);
            
            String cambiar = JOptionPane.showInputDialog("¿Qué datos deseas ingresar? (solo " + Integer.toString(cantidad.length) + ")\nY dividido entre comas (, )");
            String[] registrosN = cambiar.split(",\\s*");
            conx.crearRegistros(conn, datos[0], cantidad.length, registrosN, cantidad);

            ejecutar();
        } catch (SQLException ex) {
            Logger.getLogger(Diseño.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_createActionPerformed

    private void reinicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reinicioActionPerformed
        // TODO add your handling code here:
        tacons.setText("");
        txalias.setText("");
        DefaultTableModel tabla = (DefaultTableModel) tbres.getModel();
        tabla.setRowCount(0);
        tabla.setColumnCount(0);
    }//GEN-LAST:event_reinicioActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Diseño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Diseño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Diseño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Diseño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Diseño dialog = new Diseño(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btejec;
    private javax.swing.JButton create;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton reinicio;
    private javax.swing.JButton salir;
    private javax.swing.JTextArea tacons;
    private javax.swing.JTable tbres;
    private javax.swing.JTextField txalias;
    private javax.swing.JButton upd;
    // End of variables declaration//GEN-END:variables

    private String[] recibiralias() {
        // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        String[] alias;
        if (txalias.getText().contains(",")) {
                alias = txalias.getText().split(",\\s*");
            } else {
                alias = new String[] {txalias.getText()};
            }
        return alias;
    }

    private ArrayList<String> recolectarRegistro(boolean validor) throws SQLException {
        // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTableModel tabla = (DefaultTableModel) tbres.getModel();
        tabla.setRowCount(0);
        tabla.setColumnCount(0);
        ArrayList<String> recibir = new ArrayList<>();
        conn = conx.getConexion();
        String opcion_tb = (String) JOptionPane.showInputDialog(
                null,
                "Escoge una tabla",
                "Selección de tabla",
                JOptionPane.QUESTION_MESSAGE,
                null,
                tablas_bbdd,
                tablas_bbdd[0]);
        
        recibir.add(opcion_tb);
        
        if(validor){
            String[] campos_bbdd = conx.sacarCampos(opcion_tb).toArray(new String[0]);

            String opcion_cp = (String) JOptionPane.showInputDialog(
                    null,
                    "Escoge un campo",
                    "Selección de campo",
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    campos_bbdd,
                    campos_bbdd[0]);

            recibir.add(opcion_cp);
            String consulta = "Select " + opcion_cp + " from " + opcion_tb;
            String[] resultados = conx.sacarRegistros(consulta, conn, opcion_cp);

            String opcion_rg = (String) JOptionPane.showInputDialog(
                null,
                "Escoge un Registro",
                "Selección de Registros",
                JOptionPane.QUESTION_MESSAGE,
                null,
                resultados,
                resultados[0]);
                recibir.add(opcion_rg);
            

            for (int i = 0; i < campos_bbdd.length; i++) {
                recibir.add(campos_bbdd[i]);
            }
        }
        return recibir;
    }
    
    private void ejecutar() throws SQLException {
        // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        conn = conx.getConexion();
        String consulta = tacons.getText();
        String[] alias = recibiralias();
        ArrayList<Object[]> resultados = conx.ejecutaStatement(consulta, conn, alias);

        DefaultTableModel tabla = (DefaultTableModel) tbres.getModel();
        tabla.setRowCount(0);
        tabla.setColumnCount(0);
        Vector<String> columnas= new Vector<>();

        for (int i = 0; i < tabla.getColumnCount(); i++) {
            columnas.add(tabla.getColumnName(i));
        }
        for (int i = alias.length - 1; i >= 0; i--) {
            columnas.add(0, alias[i]);
        }


        tabla.setColumnIdentifiers(columnas);
        for (Object[] fila : resultados) {
            Vector<Object> rowData = new Vector<>();
            for (Object valor : fila) {
                rowData.add(valor);
            }
            tabla.addRow(rowData);
        }
    }
}
